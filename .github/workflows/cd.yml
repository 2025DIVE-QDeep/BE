name: CD

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 소스 코드 체크아웃
      - uses: actions/checkout@v3

      # 2️⃣ JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️⃣ Gradle 캐시
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4️⃣ Spring Boot prod yml 생성
      #- name: Make application-prod.yml
      #  run: |
      #    cd ./src/main/resources
      #   touch ./application-prod.yml
      #    echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.yml
      #  shell: bash

      # 5️⃣ 빌드 (테스트 제외)
      - name: Build With Gradle
        run: ./gradlew build -x test

      # 6️⃣ Docker 이미지 빌드 & Push
      - name: Docker Build & Push
        run: |
          sudo docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker build -f Dockerfile -t kangwooju/deep .
          sudo docker push kangwooju/deep

      # 7️⃣ EC2 배포
      - name: Deploy to Prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            # 기존 컨테이너 중지/삭제
            sudo docker stop qdeep_app || true
            sudo docker rm qdeep_app || true

            # 최신 이미지 Pull
            sudo docker pull kangwooju/deep

            # 컨테이너 실행 (.env 기반 환경변수 사용)
            sudo docker run -d \
              --name qdeep_app \
              --env-file /home/ubuntu/.env \
              -p 8080:8080 \
              kangwooju/deep
