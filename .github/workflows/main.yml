name: Java CI/CD with Gradle and Docker

on:
  pull_request:
    branches: [ "main" ] # main 브랜치에서만 Workflow 실행

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 코드 체크아웃
      - uses: actions/checkout@v3

      # 2️⃣ JDK 세팅
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️⃣ Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4️⃣ Gradlew 실행 권한 부여
      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      # 5️⃣ 환경변수 설정 (RDS 연결 정보)
      - name: Set RDS Environment Variables
        run: |
          echo "MYSQL_URL=jdbc:mysql://${{ secrets.RDS_HOST }}:${{ secrets.RDS_PORT }}/${{ secrets.RDS_DB }}" >> $GITHUB_ENV
          echo "MYSQL_USERNAME=${{ secrets.RDS_USER }}" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> $GITHUB_ENV
          echo "SPRING_PROFILES_ACTIVE=prod" >> $GITHUB_ENV

      # 6️⃣ Gradle 빌드 (테스트 제외)
      - name: Build With Gradle
        run: ./gradlew build -x test

      # 7️⃣ Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t Kangwooju/deep:latest .

      # 8️⃣ Docker Hub 로그인
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 9️⃣ Docker 이미지 푸시
      - name: Push Docker Image
        run: docker push Kangwooju/deep:latest
